apply plugin: 'com.android.application'

android {
    signingConfigs {
        udacityConfig {
            keyAlias 'edu.udacity.android'
            keyPassword 'udacity'
            storeFile file('keystore/udacity.jks')
            storePassword 'udacity'
        }
    }
    compileSdkVersion 22
    buildToolsVersion "22.0.1"
    defaultConfig {
        applicationId "edu.udacity.gradle.builditbigger"
        minSdkVersion 10
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        signingConfig signingConfigs.udacityConfig
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        free {
            applicationId "edu.udacity.gradle.builditbigger.free"
        }
        paid {
            applicationId "edu.udacity.gradle.builditbigger.paid"
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':android-joke-activities')
    compile project(path: ':gcm-jokes', configuration: 'android-endpoints')
    compile 'com.android.support:appcompat-v7:22.1.1'
    // ad related dependencies are configured for the free flavor only
    freeCompile 'com.google.android.gms:play-services:7.8.0'
    freeCompile 'com.google.android.gms:play-services-identity:7.8.0'
    freeCompile 'com.google.android.gms:play-services-gcm:7.8.0'
    freeCompile 'com.google.android.gms:play-services-ads:7.8.0'

    androidTestCompile 'junit:junit:4.12'
}

task customTask(type:GradleBuild, dependsOn: ":gcm-jokes:appengineRun") {
    project(":gcm-jokes").afterEvaluate {gcmJokes ->
        gcmJokes.extensions.appengine.daemon = true
    }

    tasks = [":app:connectedCheck"]

    doLast {
       println "The custom task executed successfully !"
    }
}

customTask.finalizedBy(":gcm-jokes:appengineStop")
